// Universo Platformo | API client for publishing AR.js applications
import axios, { AxiosError } from 'axios'
import { ARJSPublicationRequest, ARJSPublicationResponse, UPDLPublicationData } from '../interfaces/UPDLTypes'
import { getAuthHeaders } from '../services/api'

// Universo Platformo | –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ URL API
// –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å, —Ç–∞–∫ –∫–∞–∫ UI –∏ API –Ω–∞ –æ–¥–Ω–æ–º –¥–æ–º–µ–Ω–µ (—á–µ—Ä–µ–∑ proxy Vite).
// –î–ª—è production –∏–ª–∏ —è–≤–Ω–æ–≥–æ —É–∫–∞–∑–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è VITE_API_HOST.
// –ï—Å–ª–∏ VITE_API_HOST –Ω–µ –∑–∞–¥–∞–Ω, –∞ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ 'development', –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ (–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å).
const getApiBaseUrl = () => {
    try {
        // @ts-ignore - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è import.meta.env
        if (import.meta.env && import.meta.env.DEV) {
            // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —á–µ—Ä–µ–∑ Vite Dev Server
            return window.location.origin
        }

        // @ts-ignore
        const configuredHost = import.meta.env && import.meta.env.VITE_API_HOST
        if (configuredHost) {
            return configuredHost
        }

        // –ï—Å–ª–∏ –º—ã –∑–¥–µ—Å—å, —Ç–æ –º—ã –≤ production –∏ –Ω–µ—Ç —è–≤–Ω–æ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ö–æ—Å—Ç–∞
        return window.location.origin
    } catch (error) {
        console.warn('Error determining API base URL, falling back to origin:', error)
        return window.location.origin
    }
}

// –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–π URL –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥—É–ª—è
const API_BASE_URL = getApiBaseUrl()
// Universo Platformo | Log the final base URL for clarity, especially during development
console.log('üåç [ARJSPublishApi] Final API_BASE_URL for requests:', API_BASE_URL)

/**
 * API-–∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π –ø—Ä–æ–µ–∫—Ç–æ–≤ AR.js
 */
export class ARJSPublishApi {
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –∫ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–∞–º
     * @param headers –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
     * @returns –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
     */
    private static getHeaders(headers: Record<string, string> = {}): Record<string, string> {
        return {
            'Content-Type': 'application/json',
            ...getAuthHeaders(),
            ...headers
        }
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –ø—É–±–ª–∏–∫–∞—Ü–∏—é AR.js
     * @param request –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
     * @returns –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
     */
    static async publishARJS(request: ARJSPublicationRequest): Promise<ARJSPublicationResponse> {
        try {
            // Universo Platformo | Corrected API URL with /api/v1 prefix
            const apiUrl = `${API_BASE_URL}/api/v1/publish/arjs`
            console.log('üöÄ [FRT ARJSPublishApi] Attempting to publish AR.js. URL:', apiUrl, 'Request:', request)
            const response = await axios.post<ARJSPublicationResponse>(apiUrl, request, {
                headers: this.getHeaders()
            })
            console.log('‚úÖ [FRT ARJSPublishApi] Publication response:', response.data)
            return response.data
        } catch (error: unknown) {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ AxiosError
            if (axios.isAxiosError(error)) {
                console.error(
                    '‚ùå [FRT ARJSPublishApi] Error publishing AR.js project:',
                    error.response?.data || error.message,
                    error.config
                )

                // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
                if (error.response) {
                    const errorMessage = error.response.data?.error || error.response.statusText || error.message
                    console.error('[ARJSPublishApi] Server response error:', errorMessage)
                    throw new Error(`Publication failed: ${errorMessage}`)
                }
            } else {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ-Axios –æ—à–∏–±–æ–∫
                console.error(
                    '‚ùå [FRT ARJSPublishApi] Non-Axios error publishing AR.js project:',
                    error instanceof Error ? error.message : 'Unknown error'
                )
            }

            throw error
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö AR.js –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ chatflow
     * @param chatflowId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä chatflow
     * @returns –ú–∞—Å—Å–∏–≤ –ø—É–±–ª–∏–∫–∞—Ü–∏–π
     */
    static async getPublishedARJSProjects(chatflowId: string): Promise<ARJSPublicationResponse[]> {
        try {
            // Universo Platformo | Corrected API URL with /api/v1 prefix
            const apiUrl = `${API_BASE_URL}/api/v1/publish/arjs/chatflow/${chatflowId}`
            console.log('üöÄ [FRT ARJSPublishApi] Attempting to get published AR.js projects. URL:', apiUrl)
            const response = await axios.get<ARJSPublicationResponse[]>(apiUrl, {
                headers: this.getHeaders()
            })
            console.log('‚úÖ [FRT ARJSPublishApi] Get published projects response:', response.data)
            return response.data
        } catch (error: unknown) {
            if (axios.isAxiosError(error)) {
                console.error(
                    '‚ùå [FRT ARJSPublishApi] Error getting published AR.js projects:',
                    error.response?.data || error.message,
                    error.config
                )
            } else {
                console.error(
                    '‚ùå [FRT ARJSPublishApi] Non-Axios error getting published AR.js projects:',
                    error instanceof Error ? error.message : 'Unknown error'
                )
            }
            throw error
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ id –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
     * @param publicationId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
     * @returns –î–∞–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å UPDL —Å—Ü–µ–Ω–æ–π
     */
    static async getPublicationData(publicationId: string): Promise<UPDLPublicationData> {
        try {
            const apiBaseUrlToUse = getApiBaseUrl()
            // Universo Platformo | Corrected API URL with /api/v1 prefix for public data endpoint
            const publicationUrl = `${apiBaseUrlToUse}/api/v1/publish/arjs/public/${publicationId}`

            console.log('üöÄ [FRT ARJSPublishApi] Attempting to get publication data. URL:', publicationUrl)
            console.log('üìÑ [FRT ARJSPublishApi] Current location for context:', window.location.href)

            // –î–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            const response = await axios.get<UPDLPublicationData>(publicationUrl, {
                // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
                headers: {
                    'Cache-Control': 'no-cache',
                    Pragma: 'no-cache',
                    Expires: '0'
                }
            })
            console.log('[ARJSPublishApi] Publication data retrieved:', response.data)
            return response.data
        } catch (error: unknown) {
            console.error('[ARJSPublishApi] Error getting publication data:', error instanceof Error ? error.message : 'Unknown error')

            // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
            if (axios.isAxiosError(error)) {
                if (error.response?.status === 404) {
                    throw new Error('Publication not found')
                } else if (error.response) {
                    const errorData = error.response.data
                    throw new Error(errorData?.error || `Failed to load publication data: ${error.response.statusText}`)
                }
            }

            throw error
        }
    }

    /**
     * –£–¥–∞–ª—è–µ—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏—é AR.js
     * @param publicationId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
     * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞–ª–µ–Ω–∏—è
     */
    static async deletePublication(publicationId: string): Promise<{ success: boolean }> {
        try {
            // Universo Platformo | Corrected API URL with /api/v1 prefix
            const apiUrl = `${API_BASE_URL}/api/v1/publish/arjs/${publicationId}`
            console.log('üöÄ [FRT ARJSPublishApi] Attempting to delete publication. URL:', apiUrl)
            const response = await axios.delete<{ success: boolean }>(apiUrl, {
                headers: this.getHeaders()
            })
            console.log('‚úÖ [FRT ARJSPublishApi] Delete publication response:', response.data)
            return response.data
        } catch (error: unknown) {
            if (axios.isAxiosError(error)) {
                console.error('‚ùå [FRT ARJSPublishApi] Error deleting publication:', error.response?.data || error.message, error.config)
            } else {
                console.error(
                    '‚ùå [FRT ARJSPublishApi] Non-Axios error deleting publication:',
                    error instanceof Error ? error.message : 'Unknown error'
                )
            }
            throw error
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ AR.js
     * @param publicationId –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
     * @param data –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
     * @returns –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
     */
    static async updatePublication(publicationId: string, data: Partial<ARJSPublicationRequest>): Promise<ARJSPublicationResponse> {
        try {
            // Universo Platformo | Corrected API URL with /api/v1 prefix
            const apiUrl = `${API_BASE_URL}/api/v1/publish/arjs/${publicationId}`
            console.log('üöÄ [FRT ARJSPublishApi] Attempting to update publication. URL:', apiUrl, 'Data:', data)
            const response = await axios.patch<ARJSPublicationResponse>(apiUrl, data, {
                headers: this.getHeaders()
            })
            console.log('‚úÖ [FRT ARJSPublishApi] Update publication response:', response.data)
            return response.data
        } catch (error: unknown) {
            if (axios.isAxiosError(error)) {
                console.error('‚ùå [FRT ARJSPublishApi] Error updating publication:', error.response?.data || error.message, error.config)
            } else {
                console.error(
                    '‚ùå [FRT ARJSPublishApi] Non-Axios error updating publication:',
                    error instanceof Error ? error.message : 'Unknown error'
                )
            }
            throw error
        }
    }
}
