// Universo Platformo | AR.js specialized publish service
import { publishService, PublicationResult } from './publishService'
import { getAuthHeaders } from './api'
import { ARJSPublishApi } from '../api/ARJSPublishApi'
import { ARJSPublicationRequest } from '../interfaces/UPDLTypes'

// –ú—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∏–ø ARJSPublicationRequest –∏–∑ –∏–º–ø–æ—Ä—Ç–∞
// export interface ARJSPublicationParams {
//     chatflowId: string
//     generationMode: string
//     isPublic: boolean
//     projectName: string
//     unikId: string
//     [key: string]: any
// }

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π AR.js –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */
export const arjsService = {
    /**
     * –ü—É–±–ª–∏–∫–∞—Ü–∏—è AR.js –ø—Ä–æ–µ–∫—Ç–∞ —Å –ø–æ–º–æ—â—å—é –ø—Ä—è–º–æ–≥–æ API
     * @param params –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
     * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
     */
    async publishARJS(params: ARJSPublicationRequest): Promise<any> {
        console.log('üîπ [arjsService.publishARJS] Publishing AR.js project:', params)
        try {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º API-–∫–ª–∏–µ–Ω—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ API
            const result = await ARJSPublishApi.publishARJS(params)
            console.log('üîπ [arjsService.publishARJS] Publication successful:', result)
            return result
        } catch (error) {
            console.error('üîπ [arjsService.publishARJS] Publication failed:', error)
            throw error
        }
    },

    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ AR.js –ø—Ä–æ–µ–∫—Ç–∞
     * @param flowId ID –ø–æ—Ç–æ–∫–∞
     * @param isPublic –§–ª–∞–≥ –ø—É–±–ª–∏—á–Ω–æ—Å—Ç–∏
     * @param unikId ID –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
     * @param options –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ (markerType, generationMode –∏ —Ç.–¥.)
     */
    async saveARJSPublication(
        flowId: string,
        isPublic: boolean,
        unikId: string,
        options: Record<string, any> = {}
    ): Promise<PublicationResult> {
        console.log('üîπ [arjsService.saveARJSPublication] Saving AR.js publication:', {
            flowId,
            isPublic,
            options
        })

        return publishService.savePublicationStatus({
            flowId,
            isPublic,
            unikId,
            technology: 'arjs',
            generationMode: options.generationMode || 'streaming',
            markerType: options.markerType || 'hiro',
            markerValue: options.markerValue || 'hiro',
            ...options
        })
    },

    /**
     * –§–æ—Ä–º–∏—Ä—É–µ—Ç URL –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ AR.js –ø—Ä–æ–µ–∫—Ç–∞
     * @param flowId ID –ø–æ—Ç–æ–∫–∞
     */
    getARViewUrl(flowId: string): string {
        return publishService.getPublicUrl(flowId, 'arjs')
    }
}
