{
  "assistants": {
    "title": "Assistants",
    "underDevelopment": "Under Development",
    "searchPlaceholder": "Search assistants",
    "noAssistantsYet": "{type} assistants not added yet",
    "loadExisting": "Load Existing Assistant",
    "addNewAssistant": "Add New Assistant",
    "editAssistant": "Edit Assistant",
    "custom": {
      "title": "Custom Assistant",
      "description": "Create a custom assistant using chosen LLMs",
      "addNew": "Add New Custom Assistant"
    },
    "openai": {
      "title": "OpenAI Assistant",
      "description": "Create an assistant using OpenAI Assistant API",
      "load": "Load",
      "credential": "OpenAI Credential",
      "deleteConfirm": {
        "onlyFlowise": "Only Flowise",
        "openaiAndFlowise": "OpenAI and Flowise"
      },
      "deleteAssistant": "Delete Assistant",
      "deleteMethod": "Select delete method for {{name}}",
      "codeInterpreterFiles": "Code Interpreter Files",
      "fileSearchFiles": "File Search Files",
      "tools": {
        "codeInterpreter": "Code Interpreter",
        "fileSearch": "File Search"
      }
    },
    "azure": {
      "title": "Azure Assistant (Coming soon)",
      "description": "Create an assistant using Azure Assistant API"
    },
    "vectorStore": {
      "credential": "Connect Credential",
      "createNew": "Create New",
      "files": "files",
      "name": "Store Name",
      "myVectorStore": "My vector store",
      "expiration": "Expiration",
      "expirationDays": "Days Until Expiration",
      "selectVectorStore": "Select Vector Store",
      "addSuccess": "Vector Store successfully added",
      "addError": "Failed to add Vector Store: {{error}}",
      "saveSuccess": "Vector Store successfully saved",
      "saveError": "Failed to save Vector Store: {{error}}",
      "deleteSuccess": "Vector Store successfully deleted",
      "deleteError": "Failed to delete Vector Store: {{error}}"
    },
    "fields": {
      "selectModel": "Select Model",
      "instructions": "Instructions",
      "knowledge": "Knowledge (Document Stores)",
      "describeKnowledge": "Describe Knowledge",
      "tools": "Tools",
      "modelName": "Model Name",
      "temperature": "Temperature",
      "maxTokens": "Max Tokens",
      "topProbability": "Top Probability",
      "frequencyPenalty": "Frequency Penalty",
      "presencePenalty": "Presence Penalty",
      "timeout": "Timeout",
      "basePath": "BasePath",
      "baseOptions": "BaseOptions",
      "addTool": "Add Tool",
      "saveAssistant": "Save Assistant",
      "deleteAssistant": "Delete Assistant",
      "generate": "Generate",
      "expand": "Expand",
      "icon": "Assistant Icon Src",
      "tool": "Tool"
    },
    "tooltips": {
      "documentStores": "Give your assistant context about different document sources. Document stores must be upserted in advance.",
      "knowledgeDescription": "Describe what the knowledge base is about, this is useful for the AI to know when and how to search for correct information",
      "name": "The name of the assistant. The maximum length is 256 characters.",
      "description": "The description of the assistant. The maximum length is 512 characters.",
      "instructions": "The system instructions that the assistant uses. The maximum length is 32768 characters.",
      "temperature": "Controls randomness: Lowering results in less random completions. As the temperature approaches zero, the model will become deterministic and repetitive.",
      "topProbability": "Controls diversity via nucleus sampling: 0.5 means half of all likelihood-weighted options are considered.",
      "tools": "A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant.",
      "codeInterpreterFiles": "Code Interpreter enables the assistant to write and run code. This tool can process files with diverse data and formatting, and generate files such as graphs",
      "fileSearchFiles": "File search enables the assistant with knowledge from files that you or your users upload. Once a file is uploaded, the assistant automatically decides when to retrieve content based on user requests"
    },
    "messages": {
      "mandatoryFields": "Please fill in all mandatory fields.",
      "customAssistantCreated": "New Custom Assistant created.",
      "customAssistantCreateError": "Failed to add new Custom Assistant: {{error}}",
      "assistantCreated": "New Assistant added",
      "assistantCreateError": "Failed to add new Assistant: {{error}}",
      "assistantSaved": "Assistant saved",
      "assistantSaveError": "Failed to save Assistant: {{error}}",
      "assistantSynced": "Assistant successfully synced!",
      "assistantSyncError": "Failed to sync Assistant: {{error}}",
      "fileUploaded": "File uploaded successfully!",
      "fileUploadError": "Failed to upload file: {{error}}",
      "assistantDeleted": "Assistant deleted",
      "assistantDeleteError": "Failed to delete Assistant: {{error}}"
    },
    "placeholders": {
      "name": "My New Assistant",
      "description": "Description of what the Assistant does",
      "instructions": "You are a personal math tutor. When asked a question, write and run Python code to answer the question."
    },
    "common": {
      "loading": "Loading...",
      "save": "Save",
      "cancel": "Cancel",
      "delete": "Delete",
      "edit": "Edit",
      "create": "Create",
      "search": "Search",
      "add": "Add",
      "expand": "Expand",
      "close": "Close",
      "submit": "Submit",
      "update": "Update",
      "name": "Name"
    }
  }
} 