{
  "uniks": {
    "title": "Uniks",
    "create": "Create Unik",
    "name": "Name",
    "description": "Description",
    "save": "Save",
    "delete": "Delete",
    "conflict": "Another user is editing this Flow. Please wait or coordinate.",
    "multipleEditors": "Multiple users are editing this Unik."
  },
  "unikDetail": {
    "dashboard": "Uniks Dashboard",
    "welcome": "Welcome to your unik:",
    "navigation": "Use the left menu to navigate to Chatflows, Agentflows, etc.",
    "back": "Back to Uniks"
  },
  "admin": {
    "title": "Admin Panel",
    "email": "Email",
    "superAdmin": "Super Admin",
    "banned": "Banned",
    "actions": "Actions",
    "delete": "Delete"
  },
  "common": {
    "loading": "Loading...",
    "notFound": "Global Workspace Not Found",
    "save": "Save",
    "cancel": "Cancel",
    "delete": "Delete",
    "edit": "Edit",
    "create": "Create",
    "search": "Search",
    "filter": "Filter",
    "login": "Login",
    "addNew": "Add New",
    "cardView": "Card View",
    "listView": "List View",
    "add": "Add",
    "expand": "Expand",
    "close": "Close",
    "version": "version",
    "confirm": "Confirm",
    "refer": "Refer",
    "here": "here",
    "forMoreDetails": "for more details",
    "flowise": "Flowise",
    "submit": "Submit",
    "update": "Update",
    "remove": "Remove",
    "logout": "Logout",
    "sort": "Sort",
    "download": "Download",
    "upload": "Upload",
    "import": "Import",
    "export": "Export",
    "copy": "Copy",
    "paste": "Paste",
    "clear": "Clear",
    "reset": "Reset",
    "ok": "OK",
    "next": "Next",
    "prev": "Previous",
    "continue": "Continue",
    "yes": "Yes",
    "no": "No",
    "error": "Error",
    "success": "Success",
    "warning": "Warning",
    "info": "Info",
    "noData": "No Data"
  },
  "promptGenerator": {
    "summarize": "Summarize a document",
    "translate": "Translate the language",
    "email": "Write me an email",
    "convertCode": "Convert the code to another language",
    "research": "Research and generate a report",
    "planTrip": "Plan a trip",
    "taskPlaceholder": "Describe your task here",
    "generate": "Generate",
    "back": "Back",
    "apply": "Apply"
  },
  "speechToText": {
    "title": "Speech to Text",
    "providersTitle": "Providers",
    "labels": {
      "credential": "Connect Credential",
      "language": "Language",
      "languageDescription": "The language of the input audio. Supplying the input language in ISO-639-1 format will improve accuracy and latency.",
      "prompt": "Prompt",
      "promptDescription": "An optional text to guide the model's style or continue a previous audio segment. The prompt should match the audio language.",
      "temperature": "Temperature",
      "temperatureDescription": "The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.",
      "baseUrl": "Base URL",
      "baseUrlDescription": "The base URL of the local AI server",
      "model": "Model",
      "modelDescription": "The STT model to load. Defaults to whisper-1 if left blank.",
      "azureLanguageDescription": "The recognition language (e.g., \"en-US\", \"es-ES\")",
      "profanityFilter": "Profanity Filter Mode",
      "profanityFilterDescription": "How to handle profanity in the transcription",
      "audioChannels": "Audio Channels",
      "audioChannelsDescription": "Comma-separated list of audio channels to process (e.g., \"0,1\")",
      "profanityOptions": {
        "none": "None",
        "masked": "Masked",
        "removed": "Removed",
        "raw": "Raw"
      },
      "none": "None"
    },
    "providers": {
      "openai": "OpenAI Whisper",
      "assemblyai": "AssemblyAI",
      "localai": "Local AI",
      "azure": "Azure OpenAI Whisper",
      "groq": "Groq"
    },
    "save": "Save",
    "configSaved": "Speech To Text Configuration Saved",
    "failedToSave": "Failed to save Speech To Text Configuration"
  },
  "menu": {
    "dashboard": "Dashboard",
    "chatflows": "Chatflows",
    "agentflows": "Agents",
    "assistants": "Assistants",
    "tools": "Tools",
    "credentials": "Credentials",
    "variables": "Variables",
    "apiKeys": "API Keys",
    "documentStores": "Documents",
    "templates": "Templates",
    "uniks": "Uniks",
    "docs": "Documentation",
    "profile": "Profile"
  },
  "templates": {
    "title": "Templates",
    "search": "Search Name/Description/Node",
    "tag": "Tag",
    "type": "Type",
    "framework": "Framework",
    "communityTemplates": "Community Templates",
    "myTemplates": "My Templates",
    "saveAsTemplate": "Save As Template",
    "export": "Export",
    "noTemplatesYet": "No Templates Yet",
    "noSavedCustomTemplates": "No Saved Custom Templates",
    "confirmDelete": "Delete",
    "confirmDeleteDescription": "Delete Custom Template {name}?",
    "deleteSuccess": "Custom Template deleted successfully!",
    "deleteError": "Failed to delete custom template: {error}"
  },
  "chatflows": {
    "title": "Chatflows",
    "searchPlaceholder": "Search Name or Category",
    "noChatflowsYet": "No Chatflows Yet"
  },
  "agents": {
    "title": "Agents",
    "searchPlaceholder": "Search Name or Category",
    "noAgentsYet": "No Agents Yet"
  },
  "assistants": {
    "title": "Assistants",
    "underDevelopment": "Under Development",
    "searchPlaceholder": "Search assistants",
    "noAssistantsYet": "{type} assistants not added yet",
    "loadExisting": "Load Existing Assistant",
    "addNewAssistant": "Add New Assistant",
    "editAssistant": "Edit Assistant",
    "custom": {
      "title": "Custom Assistant",
      "description": "Create a custom assistant using chosen LLMs",
      "addNew": "Add New Custom Assistant"
    },
    "openai": {
      "title": "OpenAI Assistant",
      "description": "Create an assistant using OpenAI Assistant API",
      "load": "Load",
      "credential": "OpenAI Credential",
      "deleteConfirm": {
        "onlyFlowise": "Only Flowise",
        "openaiAndFlowise": "OpenAI and Flowise"
      },
      "deleteAssistant": "Delete Assistant",
      "deleteMethod": "Select delete method for {{name}}",
      "codeInterpreterFiles": "Code Interpreter Files",
      "fileSearchFiles": "File Search Files",
      "tools": {
        "codeInterpreter": "Code Interpreter",
        "fileSearch": "File Search"
      }
    },
    "azure": {
      "title": "Azure Assistant (Coming soon)",
      "description": "Create an assistant using Azure Assistant API"
    },
    "fields": {
      "selectModel": "Select Model",
      "instructions": "Instructions",
      "knowledge": "Knowledge (Document Stores)",
      "describeKnowledge": "Describe Knowledge",
      "tools": "Tools",
      "modelName": "Model Name",
      "temperature": "Temperature",
      "maxTokens": "Max Tokens",
      "topProbability": "Top Probability",
      "frequencyPenalty": "Frequency Penalty",
      "presencePenalty": "Presence Penalty",
      "timeout": "Timeout",
      "basePath": "BasePath",
      "baseOptions": "BaseOptions",
      "addTool": "Add Tool",
      "saveAssistant": "Save Assistant",
      "deleteAssistant": "Delete Assistant",
      "generate": "Generate",
      "expand": "Expand",
      "icon": "Assistant Icon Src"
    },
    "tooltips": {
      "documentStores": "Give your assistant context about different document sources. Document stores must be upserted in advance.",
      "knowledgeDescription": "Describe what the knowledge base is about, this is useful for the AI to know when and how to search for correct information",
      "name": "The name of the assistant. The maximum length is 256 characters.",
      "description": "The description of the assistant. The maximum length is 512 characters.",
      "instructions": "The system instructions that the assistant uses. The maximum length is 32768 characters.",
      "temperature": "Controls randomness: Lowering results in less random completions. As the temperature approaches zero, the model will become deterministic and repetitive.",
      "topProbability": "Controls diversity via nucleus sampling: 0.5 means half of all likelihood-weighted options are considered.",
      "tools": "A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant.",
      "codeInterpreterFiles": "Code Interpreter enables the assistant to write and run code. This tool can process files with diverse data and formatting, and generate files such as graphs",
      "fileSearchFiles": "File search enables the assistant with knowledge from files that you or your users upload. Once a file is uploaded, the assistant automatically decides when to retrieve content based on user requests"
    },
    "messages": {
      "mandatoryFields": "Please fill in all mandatory fields.",
      "customAssistantCreated": "New Custom Assistant created.",
      "customAssistantCreateError": "Failed to add new Custom Assistant: {{error}}",
      "assistantCreated": "New Assistant added",
      "assistantCreateError": "Failed to add new Assistant: {{error}}",
      "assistantSaved": "Assistant saved",
      "assistantSaveError": "Failed to save Assistant: {{error}}",
      "assistantSynced": "Assistant successfully synced!",
      "assistantSyncError": "Failed to sync Assistant: {{error}}",
      "fileUploaded": "File uploaded successfully!",
      "fileUploadError": "Failed to upload file: {{error}}",
      "assistantDeleted": "Assistant deleted",
      "assistantDeleteError": "Failed to delete Assistant: {{error}}"
    },
    "placeholders": {
      "name": "My New Assistant",
      "description": "Description of what the Assistant does",
      "instructions": "You are a personal math tutor. When asked a question, write and run Python code to answer the question."
    }
  },
  "credentials": {
    "title": "Credentials",
    "searchPlaceholder": "Search Credentials",
    "addNew": "Add New Credential",
    "addCredential": "Add Credential",
    "noCredentialsYet": "No Credentials Yet",
    "deleteConfirm": "Delete credential {name}?",
    "deleteSuccess": "Credential deleted",
    "deleteError": "Failed to delete Credential: {error}",
    "credentialName": "Credential Name",
    "chooseAnOption": "choose an option",
    "messages": {
      "newCredentialAdded": "New Credential added",
      "addError": "Failed to add new Credential: {{error}}",
      "credentialSaved": "Credential saved",
      "saveError": "Failed to save Credential: {{error}}"
    },
    "grid": {
      "name": "Name",
      "lastUpdated": "Last Updated",
      "created": "Created"
    }
  },
  "variables": {
    "title": "Variables",
    "searchPlaceholder": "Search Variables",
    "howToUse": "How To Use",
    "addVariable": "Add Variable",
    "editVariable": "Edit Variable",
    "variableName": "Variable Name",
    "type": "Type",
    "value": "Value",
    "chooseOption": "choose an option",
    "noVariablesYet": "No Variables Yet",
    "deleteConfirm": "Delete variable {name}?",
    "deleteSuccess": "Variable deleted",
    "deleteError": "Failed to delete Variable: {error}",
    "messages": {
      "newVariableAdded": "New Variable added",
      "addError": "Failed to add new Variable: {{error}}",
      "variableSaved": "Variable saved",
      "saveError": "Failed to save Variable: {{error}}"
    },
    "usage": {
      "customComponents": "Variables can be used in Custom Tool, Custom Function, Custom Loader, If Else Function with the $ prefix.",
      "textField": "Variables can also be used in Text Field parameter of any node. For example, in System Message of Agent:",
      "typeExplanation": "If variable type is Static, the value will be retrieved as it is. If variable type is Runtime, the value will be retrieved from .env file.",
      "overrideConfig": "You can also override variable values in API overrideConfig using",
      "readMore": "Read more from"
    },
    "grid": {
      "name": "Name",
      "value": "Value",
      "type": "Type",
      "lastUpdated": "Last Updated",
      "created": "Created"
    }
  },
  "apiKeys": {
    "title": "API Keys",
    "searchPlaceholder": "Search API keys",
    "import": "Import API Keys",
    "createKey": "Create Key",
    "noApiKeysYet": "No API keys yet",
    "deleteToolConfirm": "Delete key [{name}]?",
    "deleteSuccess": "API key deleted",
    "deleteError": "Failed to delete API key: {error}",
    "thereAre": "There are",
    "chatflowsUsingKey": "chatflows using this key",
    "copied": "Copied!",
    "buttonTitles": {
      "copy": "Copy API Key",
      "show": "Show",
      "edit": "Edit",
      "delete": "Delete"
    },
    "chatflowDetails": {
      "name": "Chatflow Name",
      "modifiedOn": "Modified On", 
      "category": "Category"
    },
    "grid": {
      "keyName": "Key Name",
      "apiKey": "API Key",
      "usage": "Usage",
      "created": "Created"
    },
    "placeholders": {
      "keyName": "My New Key"
    },
    "messages": {
      "newKeyAdded": "New API key added",
      "addKeyError": "Failed to add new API key: {{error}}",
      "keySaved": "API Key saved",
      "saveKeyError": "Failed to save API key: {{error}}",
      "importSuccess": "Imported keys successfully!",
      "importError": "Failed to import keys: {{error}}"
    },
    "importFile": "Import api.json file",
    "chooseFile": "Choose a file to upload",
    "importMode": "Import Mode",
    "chooseOption": "choose an option"
  },
  "documentStore": {
    "title": "Document Store",
    "searchPlaceholder": "Search Name",
    "addNew": "Add New",
    "noDocumentStoresYet": "No Document Stores Created Yet",
    "addDocumentStore": "Add Document Store",
    "empty": "EMPTY",
    "addDocumentLoader": "Add Document Loader",
    "moreActions": "More Actions",
    "noDocumentAddedYet": "No Document Added Yet",
    "actions": {
      "viewEditChunks": "View & Edit Chunks",
      "upsertAllChunks": "Upsert All Chunks",
      "upsertChunks": "Upsert Chunks",
      "retrievalQuery": "Retrieval Query",
      "refresh": "Refresh",
      "delete": "Delete",
      "options": "Options",
      "previewProcess": "Preview & Process",
      "viewAPI": "View API",
      "manageLinks": "Manage Links"
    },
    "form": {
      "name": "Name",
      "description": "Description",
      "add": "Add",
      "cancel": "Cancel"
    },
    "table": {
      "name": "Name",
      "description": "Description",
      "connectedFlows": "Connected flows",
      "totalCharacters": "Total characters",
      "totalChunks": "Total chunks",
      "loaderTypes": "Loader types",
      "more": "More",
      "loader": "Loader",
      "splitter": "Splitter",
      "sources": "Source(s)",
      "chunks": "Chunks",
      "chars": "Chars",
      "actions": "Actions"
    },
    "detail": {
      "description": "Description",
      "chatflowsUsed": "Chatflows Used:",
      "someFilesPendingProcessing": "Some files are pending processing. Please Refresh to get the latest status."
    },
    "messages": {
      "storeDeleted": "Store, Loader and associated document chunks deleted",
      "deleteError": "Failed to delete Document Store: {error}",
      "loaderDeleted": "Loader and associated document chunks deleted",
      "loaderProcessed": "Document processed successfully",
      "chunksUpserted": "Document chunks upserted successfully" 
    },
    "loaders": {
      "common": {
        "name": "Name",
        "process": "Process",
        "preview": "Preview",
        "previewChunks": "Preview Chunks",
        "back": "Back",
        "selectTextSplitter": "Select Text Splitter",
        "splitter": "Splitter",
        "none": "None",
        "fillMandatoryFields": "Please fill in all mandatory fields.",
        "previewError": "Failed to preview chunks: {error}",
        "processingSubmitted": "File submitted for processing. Redirecting to Document Store..",
        "processingError": "Failed to process chunking: {error}",
        "uploadFile": "Upload File",
        "chooseFile": "Choose a file to upload",
        "showChunksInPreview": "Show Chunks in Preview",
        "ofChunks": "of {total} Chunks",
        "characters": "Characters",
        "chunksPreview": "Chunks Preview",
        "selectLoader": "Select Document Loader",
        "clearSearch": "Clear Search"
      },
      "pdf": {
        "title": "PDF File",
        "loaderName": "PDF File Loader Name",
        "file": "PDF File",
        "usage": "Usage",
        "oneDocumentPerPage": "One document per page",
        "useLegacyBuild": "Use Legacy Build",
        "additionalMetadata": "Additional Metadata",
        "omitMetadataKeys": "Omit Metadata Keys"
      }
    },
    "deleteDialog": {
      "title": "Delete Document Store",
      "description": "Are you sure you want to delete this document store?",
      "removeFromVectorStore": "Remove data from vector store and record manager",
      "dataDeleteNote": "* Only data that were upserted with Record Manager will be deleted from vector store"
    },
    "status": {
      "stale": "STALE",
      "empty": "EMPTY",
      "syncing": "SYNCING",
      "upserting": "UPSERTING",
      "sync": "SYNC",
      "upserted": "UPSERTED",
      "new": "NEW"
    },
    "chunks": {
      "editChunk": "Edit Chunk",
      "deleteChunk": "Delete Chunk",
      "characters": "{{count}} characters",
      "charactersCount": "Characters: {{count}}",
      "editSuccess": "Document chunk successfully edited!",
      "editError": "Failed to edit chunk: {{error}}",
      "delete": "Delete",
      "deleteConfirm": "Delete chunk {{id}}? This action cannot be undone.",
      "deleteSuccess": "Document chunk successfully deleted!",
      "deleteError": "Failed to delete chunk: {{error}}",
      "showing": "Showing {{start}}-{{end}} of {{total}} chunks",
      "totalCharacters": "{{count}} characters",
      "noChunks": "No Chunks"
    },
    "api": {
      "upsertDescription": "With the Upsert API, you can choose an existing document and reuse the same configuration for upserting.",
      "addMetadata": "Add additional metadata to the document chunks",
      "replaceExisting": "Replace existing document with the new upserted chunks",
      "createNewDocStore": "Create a new document store",
      "overrideConfig": "Override existing configuration",
      "overrideConfigsDescription": "You can override existing configurations:"
    }
  },
  "tools": {
    "title": "Tools",
    "searchPlaceholder": "Search tools",
    "load": "Load",
    "create": "Create",
    "noToolsCreatedYet": "No Tools Created Yet",
    "dialog": {
      "saveAsTemplate": "Save as Template",
      "export": "Export",
      "toolName": "Tool Name",
      "tooltips": {
        "toolName": "Tool name must be lowercase with underscore. For example: my_tool",
        "toolDescription": "Description of what the tool does. This is for the ChatGPT to know when to use this tool.",
        "inputSchema": "What's the input format in JSON?",
        "javascriptFunction": "Function to execute when the tool is used. You can use properties specified in Input Schema as variables. For example, if the property is <code>userid</code>, you can use it as <code>$userid</code>. Return value must be a string. You can also override code from API by following this <a target=\"_blank\" href=\"https://docs.flowiseai.com/tools/custom-tool#override-function-from-api\">guide</a>"
      },
      "toolDescription": "Tool Description",
      "toolIconSource": "Tool Icon Source",
      "inputSchema": "Input Schema",
      "pasteJSON": "Paste JSON",
      "addItem": "Add Item",
      "javascriptFunction": "Javascript Function",
      "howToUseFunction": "How To Use Function",
      "seeExample": "See Example",
      "delete": "Delete",
      "useTemplate": "Use Template",
      "addNewTool": "Add New Tool",
      "editTool": "Edit Tool",
      "deleteTool": "Delete Tool",
      "deleteToolConfirm": "Delete tool {name}?",
      "grid": {
        "property": "Property",
        "type": "Type",
        "description": "Description",
        "required": "Required"
      },
      "exportAsTemplate": "Export as Template",
      "pasteJsonSchema": "Paste JSON Schema",
      "inputMustBeArray": "Input must be an array of properties",
      "invalidJSONFormat": "Invalid JSON format. Please check your input."
    },
    "function": {
      "useLibraries": "You can use any libraries imported in Flowise",
      "usePropertiesAsVariables": "You can use properties specified in Input Schema as variables with prefix $:",
      "property": "Property",
      "variable": "Variable",
      "getFlowConfig": "You can get default flow config:",
      "getCustomVariables": "You can get custom variables:",
      "returnString": "Must return a string value at the end of function"
    }
  },
  "unikList": {
    "title": "Your Uniks",
    "searchPlaceholder": "Search by name or ID",
    "addUnik": "Add Unik",
    "noUniksFound": "No Uniks Found",
    "addNewUnik": "Add New Unik",
    "cardView": "Card View", 
    "listView": "List View"
  },
  "profileMenu": {
    "export": "Export",
    "import": "Import",
    "aboutFlowise": "About Flowise",
    "logout": "Logout",
    "exportDialog": {
      "title": "Select Data to Export",
      "exporting": "Exporting...",
      "exportingInfo": "Exporting data might takes a while"
    }
  },
  "vectorStore": {
    "configureDescription": "Configure Embeddings, Vector Store and Record Manager",
    "clearSearch": "Clear Search",
    "selectProvider": "Select a Vector Store Provider",
    "selectVectorStore": "Select Vector Store",
    "messages": {
      "configSaved": "Configuration saved successfully",
      "mandatoryFields": "Please fill in all mandatory fields."
    },
    "actions": {
      "reset": "Reset",
      "saveConfig": "Save Config",
      "upsert": "Upsert",
      "upsertHistory": "Upsert History"
    },
    "steps": {
      "embeddings": "Embeddings",
      "vector_store": "Vector Store",
      "record_manager": "Record Manager"
    },
    "embeddings": {
      "selectProvider": "Select Embeddings Provider",
      "selectEmbeddings": "Select Embeddings"
    },
    "recordManager": {
      "selectProvider": "Select a Record Manager",
      "selectRecordManager": "Select Record Manager",
      "notApplicable": "Record Manager is not applicable for selected Vector Store"
    },
    "upsertResult": {
      "title": "Upsert Record",
      "added": "Added",
      "updated": "Updated",
      "skipped": "Skipped",
      "deleted": "Deleted",
      "addedDocuments": "{count} Added Documents",
      "testRetrieval": "Test Retrieval"
    },
    "formFields": {
      "connectCredential": "Connect Credential",
      "model": "Model",
      "endpoint": "Endpoint",
      "tableName": "Table Name",
      "namespace": "Namespace",
      "cleanup": "Cleanup",
      "none": "None",
      "sourceIdKey": "SourceId Key",
      "additionalConnection": "Additional Connection Configuration",
      "items": "items",
      "projectUrl": "Project URL",
      "queryName": "Query Name",
      "metadataFilter": "Metadata Filter",
      "rpcFilter": "RPC Filter"
    },
    "query": {
      "documentStore": "Document Store",
      "description": "Retrieval Playground - Test your vector store retrieval settings",
      "enterQuery": "Enter your Query",
      "retrievedDocuments": "Retrieved Documents",
      "countAndTime": "Count: {{count}}. Time taken: {{time}} millis.",
      "noDocuments": "No Documents Retrieved",
      "configSuccess": "Vector Store Config Successfully Updated",
      "configError": "Failed to update vector store config: {{error}}"
    },
    "upsertHistory": {
      "deleteSuccess": "Successfully deleted upsert history",
      "deleteError": "Failed to delete Upsert History: {{error}}",
      "fromDate": "From Date",
      "toDate": "To Date",
      "delete": "Delete",
      "row": "row",
      "rows": "rows",
      "noHistory": "No Upsert History Yet",
      "date": "Date",
      "added": "Added",
      "updated": "Updated",
      "skipped": "Skipped",
      "deleted": "Deleted",
      "details": "Details",
      "empty": "No Upsert History Yet",
      "tooltips": {
        "added": "Number of vector embeddings added to Vector Store",
        "updated": "Updated existing vector embeddings. Only works when a Record Manager is connected to the Vector Store",
        "skipped": "Number of same vector embeddings that exists, and were skipped re-upserting again. Only works when a Record Manager is connected to the Vector Store",
        "deleted": "Deleted vector embeddings. Only works when a Record Manager with a Cleanup method is connected to the Vector Store"
      }
    },
    "createNew": "- Create New -",
    "files": "files",
    "name": "Vector Store Name",
    "myVectorStore": "My Vector Store",
    "expiration": "Vector Store Expiration",
    "expirationDays": "Expiration Days",
    "deleteSuccess": "Vector Store deleted",
    "deleteError": "Failed to delete Vector Store: {{error}}",
    "addSuccess": "New Vector Store added",
    "addError": "Failed to add new Vector Store: {{error}}",
    "saveSuccess": "Vector Store saved",
    "saveError": "Failed to save Vector Store: {{error}}",
    "upsertTitle": "Upsert Vector Store",
    "upsertDatabase": "Upsert Vector Database",
    "upsert": "Upsert",
    "upsertSuccess": "Successfully upserted vector store. You can start chatting now!",
    "upsertError": "{{error}}",
    "showAPI": "Show API",
    "securityWarning": "For security reason, override config is disabled by default. You can change this by going into Chatflow Configuration -> Security tab, and enable the property you want to override.",
    "multiValuesNote": "You can also specify multiple values for a config parameter by specifying the node id"
  },
  "docstore": {
    "title": "Document Store",
    "details": "Details",
    "empty": "No upload history"
  },
  "chatbot": {
    "invalid": "Invalid Chatbot"
  },
  "embedChat": {
    "pasteHtmlBody": "Paste this anywhere in the <code><body></code> tag of your html file.",
    "specifyVersion": "You can also specify a",
    "showConfig": "Show Embed Chat Config"
  },
  "chat": {
    "chat": "Chat",
    "clearChat": "Clear Chat",
    "clearConversation": "Clear Conversation",
    "clearChatHistory": "Clear Chat History",
    "clearChatHistoryConfirm": "Are you sure you want to clear all chat history?",
    "clear": "Clear",
    "clearedChatHistory": "Successfully cleared all chat history",
    "expandChat": "Expand Chat"
  },
  "shareChatbot": {
    "configSaved": "Chatbot Configuration Saved",
    "saveError": "Failed to save Chatbot Configuration: {{error}}",
    "copied": "Copied!",
    "copyLink": "Copy Link",
    "openNewTab": "Open New Tab",
    "makePublic": "Make Public",
    "makePublicTooltip": "Making public will allow anyone to access the chatbot without username & password",
    "titleSettings": "Title Settings",
    "title": "Title",
    "titlePlaceholder": "Flowise Assistant",
    "titleAvatarLink": "Title Avatar Link",
    "titleBackgroundColor": "Title Background Color",
    "titleTextColor": "Title Text Color",
    "generalSettings": "General Settings",
    "welcomeMessage": "Welcome Message",
    "welcomeMessagePlaceholder": "Hello! This is custom welcome message",
    "errorMessage": "Error Message",
    "errorMessagePlaceholder": "This is custom error message",
    "backgroundColor": "Background Color",
    "fontSize": "Font Size",
    "poweredByTextColor": "PoweredBy Text Color",
    "showAgentMessages": "Show agent reasonings when using Agentflow",
    "renderHTML": "Render HTML on the chat",
    "generateNewSession": "Start new session when chatbot link is opened or refreshed",
    "botMessage": "Bot Message",
    "userMessage": "User Message",
    "textColor": "Text Color",
    "avatarLink": "Avatar Link",
    "showAvatar": "Show Avatar",
    "textInput": "Text Input",
    "textInputPlaceholder": "TextInput Placeholder",
    "typeQuestion": "Type question..",
    "textInputSendButtonColor": "TextInput Send Button Color",
    "saveChanges": "Save Changes"
  },
  "apiCodeDialog": {
    "noAuthorization": "No Authorization",
    "addNewKey": "- Add New Key -",
    "chooseApiKey": "Choose an API key",
    "cannotUseApiKey": "You cannot use API key while embedding/sharing chatbot.",
    "selectNoAuthorization": "Please select <b>\"No Authorization\"</b> from the dropdown at the top right corner.",
    "showOverrideConfig": "Show Override Config",
    "overrideConfigDescription": "You can override existing input configuration of the chatflow with overrideConfig property.",
    "securityNote": "For security reason, override config is disabled by default. You can change this by going into Chatflow Configuration -> Security tab, and enable the property you want to override.",
    "refer": "Refer",
    "here": "here",
    "forMoreDetails": "for more details",
    "nodes": "Nodes",
    "variables": "Variables",
    "multipleValuesNote": "You can also specify multiple values for a config parameter by specifying the node id",
    "readHere": "Read",
    "streamingNote": "on how to stream response back to application"
  },
  "chatMessage": {
    "initialGreeting": "Hi there! How can I help?",
    "defaultError": "Oops! There seems to be an error. Please try again."
  },
  "marketplaceCanvas": {
    "useChatflow": "Use Chatflow",
    "useTemplate": "Use Template",
    "inputs": "Inputs",
    "output": "Output",
    "additionalParameters": "Additional Parameters"
  },
  "canvas": {
    "back": "Back",
    "editName": "Edit Name",
    "saveName": "Save Name",
    "cancel": "Cancel",
    "apiEndpoint": "API Endpoint",
    "save": "Save",
    "saveFlow": "Save",
    "settings": "Settings",
    "confirmDelete": "Delete",
    "confirmDeleteDescription": "Delete",
    "saveNewFlow": "Save New",
    "syncNodes": "Sync Nodes",
    "deleteSuccess": "{type} deleted",
    "dirty": "You have unsaved changes. Are you sure you want to leave?",
    "syncNodesAvailable": "New version of node(s) available. Click to sync.",
    "addNodes": "Add Nodes",
    "searchNodes": "Search nodes",
    "seeExample": "See Example",
    "manageLinks": "Manage Links",
    "contextMenu": {
      "viewMessages": "View Messages",
      "viewLeads": "View Leads",
      "upsertHistory": "Upsert History",
      "configuration": "Configuration",
      "saveAsTemplate": "Save As Template",
      "duplicateChatflow": "Duplicate Chatflow",
      "loadChatflow": "Load Chatflow",
      "exportChatflow": "Export Chatflow",
      "deleteChatflow": "Delete Chatflow"
    },
    "configuration": {
      "title": "Chatflow Configuration",
      "tabs": {
        "security": "Security",
        "starterPrompts": "Conversation Starters",
        "followUpPrompts": "Follow-up Prompts",
        "speechToText": "Speech to Text",
        "chatFeedback": "Chat Feedback",
        "analyseChatflow": "Chatflow Analysis",
        "leads": "Leads",
        "fileUpload": "File Upload",
        "postProcessing": "Post Processing"
      },
      "security": {
        "rateLimit": {
          "title": "Rate Limit",
          "enable": "Enable Rate Limit",
          "save": "Save"
        },
        "allowedDomains": {
          "title": "Allowed Domains",
          "domains": "Domains",
          "errorMessage": "Error Message",
          "placeholder": "https://example.com",
          "save": "Save"
        },
        "overrideConfig": {
          "title": "Override Configuration",
          "enable": "Enable Override Configuration",
          "save": "Save",
          "tooltip": "Enable or disable which properties of the flow configuration can be overridden. Refer to the <a href=\"https://docs.flowiseai.com/using-flowise/api#override-config\" target=\"_blank\">documentation</a> for more information."
        }
      },
      "starterPrompts": {
        "info": "Starter prompts will only be shown when there is no messages on the chat",
        "save": "Save"
      },
      "followUpPrompts": {
        "enable": "Enable Follow-up Prompts",
        "providers": "Providers",
        "save": "Save",
        "settingsSaved": "Follow-up prompts settings saved",
        "failedToSave": "Failed to save follow-up prompts settings"
      },
      "speechToText": {
        "providers": "Providers",
        "none": "None",
        "save": "Save"
      },
      "chatFeedback": {
        "enable": "Enable chat feedback",
        "save": "Save",
        "settingsSaved": "Chat Feedback Settings Saved",
        "failedToSave": "Failed to save Chat Feedback Settings"
      },
      "analyseChatflow": {
        "save": "Save",
        "configSaved": "Analytic Configuration Saved",
        "failedToSave": "Failed to save Analytic Configuration",
        "status": {
          "on": "ON"
        },
        "providers": "Providers"
      },
      "leads": {
        "enable": "Enable Lead Capture",
        "save": "Save",
        "configSaved": "Leads configuration Saved",
        "failedToSave": "Failed to save Leads configuration",
        "formTitle": "Form Title",
        "messageAfterCapture": "Message after lead captured",
        "formFields": "Form fields",
        "name": "Name",
        "email": "Email Address",
        "phone": "Phone"
      },
      "fileUpload": {
        "enable": "Enable Full File Upload",
        "info": "Uploaded files will be parsed as strings and sent to the LLM. If file upload is enabled on the Vector Store as well, this will override and take precedence.",
        "refer": "Refer",
        "docs": "docs",
        "moreDetails": "for more details.",
        "save": "Save",
        "configSaved": "File Upload Configuration Saved",
        "failedToSave": "Failed to save File Upload Configuration"
      },
      "postProcessing": {
        "enable": "Enable Post Processing",
        "jsFunction": "JS Function",
        "seeExample": "See Example",
        "variables": "The following variables are available to use in the custom function:",
        "save": "Save",
        "configSaved": "Post Processing Settings Saved",
        "failedToSave": "Failed to save Post Processing Settings",
        "expand": "Expand"
      }
    },
    "nodeConfig": {
      "inputs": "Inputs",
      "outputs": "Outputs",
      "flowControl": "Flow Control",
      "addNode": "Add Node",
      "true": "True",
      "false": "False"
    },
    "messages": {
      "saveSuccess": "Saved successfully",
      "saveError": "Failed to save {type}: {error}",
      "exportError": "Cannot export:",
      "saveFirst": "Please save the flow before exporting as template",
      "upsertSuccess": "Vector store upserted successfully",
      "upsertAvailable": "Vector store upsert available. Click to upsert."
    }
  },
  "dialog": {
    "about": {
      "title": "Flowise Version",
      "currentVersion": "Current Version",
      "latestVersion": "Latest Version",
      "publishedAt": "Published At"
    },
    "allowedDomains": {
      "title": "Allowed Domains"
    },
    "chatFeedback": {
      "title": "Message Feedback",
      "provideFeedback": "Provide Feedback",
      "feedbackPlaceholder": "Enter your feedback here...",
      "submitFeedback": "Submit Feedback"
    },
    "confirm": {
      "title": "Confirm",
      "cancelButtonText": "Cancel",
      "confirmButtonText": "Confirm"
    },
    "condition": {
      "cancelButtonText": "Cancel",
      "confirmButtonText": "Confirm"
    },
    "expandText": {
      "execute": "Execute"
    },
    "exportTemplate": {
      "title": "Export As Template",
      "name": "Name",
      "description": "Description",
      "badge": "Badge",
      "usecases": "Usecases",
      "usecaseHelp": "Type a usecase and press enter to add it to the list. You can add as many items as you want.",
      "nameRequired": "Template Name is mandatory!",
      "saveSuccess": "Saved as template successfully!",
      "saveError": "Failed to save as template!",
      "cancel": "Cancel",
      "save": "Save Template"
    },
    "formatPrompt": {
      "title": "Format Prompt Values"
    },
    "login": {
      "username": "Username",
      "password": "Password"
    },
    "manageLinks": {
      "title": "Manage Scraped Links",
      "fetchLinks": "Fetch Links",
      "scrapedLinks": "Scraped Links",
      "clearAll": "Clear All",
      "emptyState": "Links scraped from the URL will appear here",
      "fetchSuccess": "Successfully fetched links",
      "cancel": "Cancel",
      "save": "Save"
    },
    "nodeInfo": {
      "documentation": "Documentation",
      "version": "version"
    },
    "nvidiaNIM": {
      "title": "NIM Setup",
      "steps": {
        "download": "Download Installer",
        "pullImage": "Pull Image",
        "startContainer": "Start Container"
      },
      "downloadPrompt": "Would you like to download the NIM installer? Click Next if it has been installed",
      "model": "Model",
      "viewLicense": "View License",
      "pullingImage": "Pulling image...",
      "startingContainer": "Starting container...",
      "imageReady": "Image is ready! Click Next to start the container.",
      "cancel": "Cancel",
      "next": "Next",
      "start": "Start",
      "download": "Download"
    },
    "promptLangsmithHub": {
      "title": "Langchain Hub",
      "promptTemplate": "PromptTemplate",
      "chatPromptTemplate": "ChatPromptTemplate",
      "model": "Model",
      "usecase": "Usecase",
      "language": "Language",
      "search": "Search",
      "loadingPrompts": "Please wait....loading Prompts",
      "noPrompts": "No Available Prompts",
      "availablePrompts": "Available Prompts",
      "prompt": "Prompt",
      "description": "Description",
      "readme": "Readme",
      "cancel": "Cancel",
      "load": "Load"
    },
    "saveChatflow": {
      "placeholder": "My New Chatflow"
    },
    "sourceDoc": {
      "title": "Source Documents",
      "error": "Error:"
    },
    "speechToText": {
      "title": "Speech to Text"
    },
    "starterPrompts": {
      "title": "Conversation Starter Prompts"
    },
    "tag": {
      "title": "Set Chatflow Category Tags",
      "addTag": "Add a tag",
      "tagHelp": "Enter a tag and press enter to add it to the list. You can add as many tags as you want.",
      "cancel": "Cancel",
      "submit": "Submit"
    },
    "viewLeads": {
      "searchPlaceholder": "Search Name or Email or Phone",
      "export": "Export",
      "noLeads": "No Leads",
      "name": "Name",
      "email": "Email Address",
      "phone": "Phone",
      "createdDate": "Created Date"
    },
    "viewMessages": {
      "export": "Export",
      "delete": "Delete",
      "clearChat": "Clear Chat",
      "deleteAllConfirm": "Are you sure you want to delete all messages?",
      "softDelete": "Soft Delete",
      "hardDelete": "Hard Delete",
      "cancel": "Cancel",
      "confirm": "Confirm",
      "noMessages": "No Messages",
      "startDate": "Start Date",
      "endDate": "End Date",
      "chatType": "Chat Type",
      "feedback": "Feedback",
      "search": "Search"
    }
  },
  "nodeCategories": {
    "Agents": "Agents",
    "Cache": "Cache",
    "Chains": "Chains",
    "Chat Models": "Chat Models",
    "Document Loaders": "Document Loaders",
    "Embeddings": "Embeddings",
    "Engine": "Engine",
    "Graph": "Graph",
    "LLMs": "LLMs",
    "Memory": "Memory",
    "Moderation": "Moderation",
    "Multi Agents": "Multi Agents",
    "Output Parsers": "Output Parsers",
    "Prompts": "Prompts",
    "Record Manager": "Record Manager",
    "Response Synthesizer": "Response Synthesizer",
    "Retrievers": "Retrievers",
    "Sequential Agents": "Sequential Agents",
    "Text Splitters": "Text Splitters",
    "Tools": "Tools",
    "Tools (MCP)": "Tools (MCP)",
    "Utilities": "Utilities",
    "Vector Stores": "Vector Stores"
  },
  "auth": {
    "title": "Authorization",
    "login": "Login",
    "register": "Registration",
    "email": "Email",
    "password": "Password",
    "loginButton": "Login",
    "registerButton": "Register",
    "successRegister": "Registration successful! Check your email for confirmation.",
    "noAccount": "Don't have an account?",
    "registerLink": "Register",
    "hasAccount": "Already have an account?",
    "loginLink": "Login",
    "welcomeBack": "Welcome back",
    "fieldsRequired": "Email and password are required",
    "invalidCredentials": "Invalid login credentials",
    "userAlreadyRegistered": "User already registered",
    "emailNotConfirmed": "Email not confirmed",
    "passwordRequirements": "Password does not meet requirements",
    "invalidEmail": "Invalid email format",
    "serverError": "Server error",
    "registrationError": "Registration error: {{error}}",
    "loginError": "Login error: {{error}}",
    "loginSuccess": "Login successful!",
    "noSessionReceived": "Login error: No session received",
    "unknownError": "Unknown error"
  }
}
